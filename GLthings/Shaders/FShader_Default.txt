#version 410
in vec4 vColour;
in vec4 vNormal;
in vec4 vPosition;
out vec4 fragColor;
uniform vec3 LightDir;
uniform vec3 LightColour;
uniform vec3 CameraPos;
uniform float SpecPow;
uniform int lightType;
void main()
{
float d = max(0, dot(normalize(vNormal.xyz), LightDir));
vec3 E = normalize(CameraPos - vPosition.xyz);
vec3 R = reflect(-LightDir, vNormal.xyz);
float s = max(0, dot(E, R));
s = pow(s, SpecPow);
if (s < 0.1)
{
s = 0.2;
}
fragColor = vec4((vec4((LightColour * d + LightColour * s),1) * vColour));